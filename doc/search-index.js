var searchIndex = JSON.parse('{\
"liriodendron":{"doc":"liriodendron","i":[[5,"custom_panic","liriodendron","Modifies panic behavior",null,[[]]],[5,"main","","",null,[[]]],[0,"args","","",null,null],[3,"Args","liriodendron::args","StructOpt struct",null,null],[12,"user_interface","","Open a new workspace in the terminal and use it as user…",0,null],[12,"max_actions","","Set the maximum number of saved actions in the actions…",0,null],[12,"max_filled_cells","","Set the maximum number of saved filled cells in the state…",0,null],[12,"max_waiting_tasks","","Set the maximum number of waiting tasks in the…",0,null],[12,"threads_number","","Set the number of threads in the tasksmanager\'s threadpool",0,null],[17,"DEFAULT_MAX_ACTIONS","","",null,null],[17,"DEFAULT_MAX_FILLED_CELLS","","",null,null],[17,"DEFAULT_MAX_WAITING_TASKS","","",null,null],[17,"DEFAULT_THREADS_NUMBER","","",null,null],[11,"is_ui_used","","",0,[[]]],[11,"get_threads_number","","",0,[[],[["result",4],["error",3]]]],[11,"get_max_waiting_tasks","","",0,[[],[["result",4],["error",3]]]],[11,"get_max_actions","","",0,[[],[["result",4],["error",3]]]],[11,"get_max_filled_cells","","",0,[[],[["result",4],["error",3]]]],[0,"log","liriodendron","Communication interface between other modules",null,null],[3,"Log","liriodendron::log","Represents a communication interface between crates.…",null,null],[12,"actions","","Stocks last user actions",1,null],[12,"brush","","",1,null],[12,"brushcolor","","",1,null],[12,"delayedgrids","","Delayed state of grids",1,null],[12,"generationnumber","","",1,null],[12,"gridname","","",1,null],[12,"grids","","Actual state of grids",1,null],[12,"texturessettings","","",1,null],[12,"overflow","","When true, a grids.state\'s overflow occured",1,null],[12,"queuecapacity","","Cusomizable member",1,null],[12,"canceledactions","","Stocks last canceled actions",1,null],[0,"action","","",null,null],[3,"Action","liriodendron::log::action","Represents a user action",null,null],[12,"grid_id","","",2,null],[12,"grid","","",2,null],[12,"tool","","",2,null],[12,"checked","","The log grid\'s coordinates and the user interface grid\'s…",2,null],[11,"new","","",2,[[["tool",4]],["action",3]]],[11,"get_grid_id","","",2,[[]]],[11,"get_grid","","",2,[[],["grid",4]]],[11,"get_tool","","",2,[[],["tool",4]]],[11,"is_checked","","",2,[[]]],[11,"corrected","","Creates a new Action object with fitted grid\'s coordinates…",2,[[["option",4]],["action",3]]],[0,"tools","liriodendron::log","",null,null],[4,"Pixel","liriodendron::log::tools","Possible content for a cell",null,null],[13,"Empty","","",3,null],[13,"Full","","",3,null],[4,"Grid","","Grid types",null,null],[13,"Generation","","",4,null],[4,"WorkspaceTool","","Workspace tools: grids management",null,null],[13,"AddGrid","","",5,null],[13,"RenameGrid","","",5,null],[13,"DeleteGrid","","",5,null],[13,"SwitchGrid","","",5,null],[4,"GridTool","","Grid tools: grid cleaner and grid size incrementors and…",null,null],[13,"ClearGrid","","",6,null],[13,"HeightDecrementor","","",6,null],[13,"HeightIncrementor","","",6,null],[13,"WidthDecrementor","","",6,null],[13,"WidthIncrementor","","",6,null],[4,"CellTool","","Grid cells\' content setters",null,null],[13,"PixelBrush","","",7,null],[13,"PixelEraser","","",7,null],[4,"Tool","","Tool types",null,null],[13,"WorkspaceSetter","","",8,null],[13,"GridSetter","","",8,null],[13,"CellSetter","","",8,null],[0,"brush","","",null,null],[3,"Brush","liriodendron::log::tools::brush","Represent brush tool",null,null],[12,"pixels","","Possible Brush actions",9,null],[12,"color","","Specific pixel color",9,null],[12,"current_action","","Cycled counter between 0 and 4",9,null],[12,"body_de_ratio","","Body percent chance of apparition when a pixel is BodyEmpty",9,null],[12,"body_dr_ratio","","Body percent chance of apparition when a pixel is BodyBorder",9,null],[0,"brushcolor","","Module to set and check color member of the brush",null,null],[3,"BrushColor","liriodendron::log::tools::brush::brushcolor","Represents a customizable and usable color with brush tool",null,null],[12,"cursor","","",10,null],[11,"new","","",10,[[],["brushcolor",3]]],[11,"get_value","","",10,[[]]],[11,"new","liriodendron::log::tools::brush","",9,[[],["brush",3]]],[11,"get_current_action","","If current_action is 4, the current action is…",9,[[],["fullpixel",4]]],[11,"next","","",9,[[]]],[11,"previous","","",9,[[]]],[11,"get_color","","",9,[[]]],[11,"set_color","","",9,[[]]],[11,"get_body_de_ratio","","",9,[[]]],[11,"incr_body_de_ratio","","",9,[[]]],[11,"decr_body_de_ratio","","",9,[[]]],[11,"get_body_dr_ratio","","",9,[[]]],[11,"incr_body_dr_ratio","","",9,[[]]],[11,"drcr_body_dr_ratio","","",9,[[]]],[0,"grids","liriodendron::log::tools","",null,null],[3,"Grids","liriodendron::log::tools::grids","Represents user interface set of grids",null,null],[12,"current_grid_id","","",11,null],[12,"current_grid","","",11,null],[12,"names","","Names of grids",11,null],[12,"error","","If an error occured during an operation, a String is made…",11,null],[12,"height","","",11,null],[12,"width","","",11,null],[12,"scroll_x","","Determines the visible part of the grid when user…",11,null],[12,"scroll_y","","Determines the visible part of the grid when user…",11,null],[12,"state","","Grids\' filled cells",11,null],[12,"map_capacity","","Customizable member",11,null],[12,"switch_cursor","","Determines which grid will be swapped with the current grid",11,null],[5,"size_limit","","",null,[[]]],[0,"cell","","Module for grids\' cells",null,null],[3,"Cell","liriodendron::log::tools::grids::cell","Represents one cell of a grid",null,null],[12,"grid_id","","",12,null],[12,"grid","","",12,null],[12,"x","","",12,null],[12,"y","","",12,null],[11,"new","","",12,[[]]],[11,"set_grid_id","","Returns a new Cell object with a new grid id and other…",12,[[],["cell",3]]],[11,"get_grid_id","","",12,[[]]],[11,"get_grid","","",12,[[],["grid",4]]],[11,"get_x","","",12,[[]]],[11,"get_y","","",12,[[]]],[0,"gridname","liriodendron::log::tools::grids","",null,null],[3,"GridName","liriodendron::log::tools::grids::gridname","Represents a customizable name for a grid",null,null],[12,"cursor","","",13,null],[11,"new","","",13,[[],["gridname",3]]],[11,"get_value","","",13,[[],["string",3]]],[11,"backspace","","",13,[[]]],[11,"reset","","",13,[[]]],[17,"DEFAULT_GRID_SIZE","liriodendron::log::tools::grids","",null,null],[17,"SIZE_LIMIT","","",null,null],[17,"MAX_GRIDS","","",null,null],[17,"OVERFLOW_OCCURED","","",null,null],[11,"new","","",11,[[],["grids",3]]],[11,"get_current_grid_info","","",11,[[]]],[11,"is_on_current_grid","","",11,[[["grid",4]]]],[11,"get_length_capacity_state","","",11,[[]]],[11,"get_current_grid","","Returns current grid\'s filled cells in a Vec of tuples…",11,[[],["vec",3]]],[11,"get_names","","",11,[[],[["string",3],["vec",3]]]],[11,"get_nb","","",11,[[]]],[11,"is_full","","",11,[[]]],[11,"is_alone","","",11,[[]]],[11,"clear_current_grid","","",11,[[]]],[11,"add","","",11,[[["string",3]]]],[11,"rename_current_grid","","",11,[[["string",3]]]],[11,"delete_current_grid","","Clears content of the current grid, deletes it and…",11,[[]]],[11,"switch_current_grid","","switched_grid is a data from the userinterface where names…",11,[[]]],[11,"get_switch_cursor","","",11,[[]]],[11,"next_switch_cursor","","",11,[[]]],[11,"previous_switch_cursor","","",11,[[]]],[11,"check_name","","Chechs if the name typed by the user have a length between…",11,[[["string",3]],["option",4]]],[11,"error_occured","","",11,[[]]],[11,"get_error","","",11,[[],["string",3]]],[11,"next","","",11,[[]]],[11,"previous","","",11,[[]]],[11,"get_nb_filledcells_current_grid","","",11,[[]]],[11,"get_grids","","Returns grids\' filled cells in a HashMap of key-tuples…",11,[[],["hashmap",3]]],[11,"update","","Updates state depending of action. Returns the old value…",11,[[["action",3]]]],[11,"get_grid_width","","",11,[[]]],[11,"get_grid_height","","",11,[[]]],[11,"increment_width","","",11,[[]]],[11,"decrement_width","","",11,[[]]],[11,"increment_height","","",11,[[]]],[11,"decrement_height","","",11,[[]]],[11,"get_scroll","","",11,[[]]],[11,"check_scroll","","",11,[[]]],[11,"scroll_up","","",11,[[]]],[11,"scroll_down","","",11,[[]]],[11,"scroll_left","","",11,[[]]],[11,"scroll_right","","",11,[[]]],[0,"texturessettings","liriodendron::log::tools","",null,null],[3,"TexturesSettings","liriodendron::log::tools::texturessettings","Represents textures\' parameters",null,null],[12,"pixel_ratio","","Ratio between grid\'s cell and texture\'s pixels",14,null],[12,"current_pixel_ratio","","",14,null],[12,"border_ratio","","Ratio between FullPixel::BorderPixel color and…",14,null],[12,"palette","","",14,null],[12,"number_generation","","",14,null],[12,"format","","",14,null],[12,"current_format","","",14,null],[0,"generationnumber","","Module to set and check the number of generated textures",null,null],[3,"GenerationNumber","liriodendron::log::tools::texturessettings::generationnumber","Represents a customizable number of generated textures",null,null],[12,"cursor","","",15,null],[11,"new","","",15,[[],["generationnumber",3]]],[11,"get_value","","",15,[[],["string",3]]],[17,"DEFAULT_PIXEL_RATIO","liriodendron::log::tools::texturessettings","",null,null],[17,"DEFAULT_BORDER_RATIO","","",null,null],[17,"DEFAULT_PALETTE","","",null,null],[17,"DEFAULT_NUMBER_GENERATION","","",null,null],[17,"NB_PIXEL_RATIO_SETTINGS","","",null,null],[17,"NB_FORMAT","","",null,null],[11,"new","","",14,[[],["texturessettings",3]]],[11,"get_pixel_ratio","","",14,[[]]],[11,"incr_pixel_ratio","","",14,[[]]],[11,"decr_pixel_ratio","","",14,[[]]],[11,"get_border_ratio","","",14,[[]]],[11,"get_palette","","",14,[[],["palettegeneration",4]]],[11,"get_number","","",14,[[]]],[11,"set_number","","",14,[[]]],[11,"get_format","","",14,[[],["imageformat",4]]],[11,"next_format","","",14,[[]]],[11,"previous_format","","",14,[[]]],[11,"get_format_info","","",14,[[]]],[0,"setter","liriodendron::log::tools","Tools and settings where user interface requests user\'s…",null,null],[3,"Cursor","liriodendron::log::tools::setter","A numeric cursor which encapsulates shared functions…",null,null],[12,"pos","","",16,null],[12,"value","","",16,null],[12,"min_value","","",16,null],[12,"max_value","","",16,null],[12,"instant","","",16,null],[3,"StringCursor","","An alphabetic cursor which encapsulates shared functions…",null,null],[12,"pos","","",17,null],[12,"value","","",17,null],[12,"max_length","","",17,null],[12,"instant","","",17,null],[8,"Setter","","",null,null],[10,"set_value","","",18,[[]]],[11,"new","","",16,[[["vec",3]],["cursor",3]]],[11,"get_pos","","",16,[[]]],[11,"cursor_is_blinking","","",16,[[]]],[11,"reset_cursor","","",16,[[]]],[11,"cursor_left","","",16,[[]]],[11,"cursor_right","","",16,[[]]],[11,"new","","",17,[[],["stringcursor",3]]],[11,"get_pos","","",17,[[]]],[11,"cursor_is_blinking","","",17,[[]]],[11,"cursor_left","","",17,[[]]],[11,"cursor_right","","",17,[[]]],[17,"MAX_SIZE","liriodendron::log::tools","",null,null],[11,"new","liriodendron::log","",1,[[],["log",3]]],[11,"brush_next","","",1,[[]]],[11,"brush_previous","","",1,[[]]],[11,"brush_getcolor","","",1,[[]]],[11,"brush_setcolor","","",1,[[]]],[11,"brush_getcurrentaction","","",1,[[],["fullpixel",4]]],[11,"brush_getbodyderatio","","",1,[[]]],[11,"brush_incrbodyderatio","","",1,[[]]],[11,"brush_decrbodyderatio","","",1,[[]]],[11,"brush_getbodydrratio","","",1,[[]]],[11,"brush_incrbodydrratio","","",1,[[]]],[11,"brush_decrbodydrratio","","",1,[[]]],[11,"brushcolor_getcursor","","",1,[[]]],[11,"brushcolor_cursorleft","","",1,[[]]],[11,"brushcolor_resetcursor","","",1,[[]]],[11,"brushcolor_cursorright","","",1,[[]]],[11,"brushcolor_getvalue","","",1,[[]]],[11,"brushcolor_setvalue","","",1,[[]]],[11,"generationnumber_getcursor","","",1,[[]]],[11,"generationnumber_cursorleft","","",1,[[]]],[11,"generationnumber_resetcursor","","",1,[[]]],[11,"generationnumber_cursorright","","",1,[[]]],[11,"generationnumber_getvalue","","",1,[[],["string",3]]],[11,"generationnumber_setvalue","","",1,[[]]],[11,"gridname_getcursor","","",1,[[]]],[11,"gridname_cursorleft","","",1,[[]]],[11,"gridname_cursorright","","",1,[[]]],[11,"gridname_getvalue","","",1,[[],["string",3]]],[11,"gridname_setvalue","","",1,[[]]],[11,"gridname_backspace","","",1,[[]]],[11,"gridname_reset","","",1,[[]]],[11,"grids_getwidth","","",1,[[]]],[11,"grids_getheight","","",1,[[]]],[11,"grids_getlengthcapacity","","",1,[[]]],[11,"grids_getcurrentgrid","","",1,[[],["vec",3]]],[11,"grids_getgrids","","",1,[[],["hashmap",3]]],[11,"grids_getnames","","",1,[[],[["string",3],["vec",3]]]],[11,"grids_getcurrentgridid","","",1,[[]]],[11,"grids_getnb","","",1,[[]]],[11,"grids_add","","",1,[[]]],[11,"grids_renamecurrentgrid","","",1,[[]]],[11,"grids_deletecurrentgrid","","",1,[[]]],[11,"grids_erroroccured","","",1,[[]]],[11,"grids_geterror","","",1,[[],["string",3]]],[11,"grids_isfull","","",1,[[]]],[11,"grids_isalone","","",1,[[]]],[11,"grids_nextswitchcursor","","",1,[[]]],[11,"grids_previousswitchcursor","","",1,[[]]],[11,"grids_getswitchcursor","","",1,[[]]],[11,"grids_switchorder","","",1,[[]]],[11,"grids_next","","",1,[[]]],[11,"grids_previous","","",1,[[]]],[11,"gridscroll_getscroll","","",1,[[]]],[11,"gridscroll_checkscroll","","",1,[[]]],[11,"gridscroll_scrollup","","",1,[[]]],[11,"gridscroll_scrolldown","","",1,[[]]],[11,"gridscroll_scrollright","","",1,[[]]],[11,"gridscroll_scrollleft","","",1,[[]]],[11,"texturessettings_getpixelratio","","",1,[[]]],[11,"texturessettings_incrpixelratio","","",1,[[]]],[11,"texturessettings_decrpixelratio","","",1,[[]]],[11,"texturessettings_getborderratio","","",1,[[]]],[11,"texturessettings_getpalette","","",1,[[],["palettegeneration",4]]],[11,"texturessettings_getgenerationnumber","","",1,[[]]],[11,"texturessettings_setgenerationnumber","","",1,[[]]],[11,"texturessettings_getformat","","",1,[[],["imageformat",4]]],[11,"texturessettings_nextformat","","",1,[[]]],[11,"texturessettings_previousformat","","",1,[[]]],[11,"texturessettings_getformatinfo","","",1,[[]]],[11,"check_queue_size","","",1,[[]]],[11,"overflow","","",1,[[]]],[11,"brush","","",1,[[]]],[11,"erase","","",1,[[]]],[11,"clear","","",1,[[]]],[11,"increment_width","","",1,[[]]],[11,"decrement_width","","",1,[[]]],[11,"increment_height","","",1,[[]]],[11,"decrement_height","","",1,[[]]],[11,"undo","","",1,[[]]],[11,"redo","","",1,[[]]],[11,"check_last_action","","",1,[[]]],[0,"userinterface","liriodendron","",null,null],[3,"UserInterface","liriodendron::userinterface","",null,null],[12,"event","","",19,null],[12,"error","","",19,null],[12,"view","","",19,null],[5,"init","","",null,[[]]],[5,"finish","","",null,[[]]],[0,"errors","","",null,null],[4,"UserError","liriodendron::userinterface::errors","",null,null],[13,"NoneError","","",20,null],[13,"ResizeCheck","","",20,null],[13,"ResizeError","","",20,null],[0,"events","liriodendron::userinterface","",null,null],[4,"UserEvent","liriodendron::userinterface::events","",null,null],[13,"Continue","","",21,null],[13,"Exit","","",21,null],[13,"Generate","","",21,null],[13,"GenerationError","","",21,null],[13,"GridName","","",21,null],[13,"GridNumberError","","",21,null],[13,"LogOverflow","","",21,null],[13,"RenameGrid","","",21,null],[13,"SetBrushColor","","",21,null],[13,"SetGenerationNumber","","",21,null],[13,"SetTextureFormat","","",21,null],[13,"Shutdown","","",21,null],[13,"SwitchGridsError","","",21,null],[13,"SwitchGridsOrder","","",21,null],[13,"UnavailableThread","","",21,null],[5,"disable_mouse_capture","","",null,[[["stdout",3]]]],[5,"enable_mouse_capture","","",null,[[["stdout",3]]]],[0,"views","liriodendron::userinterface","Module for rendering and events catching of the different…",null,null],[4,"View","liriodendron::userinterface::views","",null,null],[13,"Edit","","",22,null],[13,"Parameters","","",22,null],[5,"ratio","","",null,[[]]],[0,"edit","","",null,null],[0,"render","liriodendron::userinterface::views::edit","",null,null],[5,"render","liriodendron::userinterface::views::edit::render","",null,[[["terminal",3],["log",3]]]],[5,"render_shortcuts","","",null,[[["frame",3],["rect",3],["vec",3]]]],[5,"render_tasks_gauge","","",null,[[["frame",3],["rect",3]]]],[5,"render_map_gauge","","",null,[[["frame",3],["log",3],["rect",3]]]],[17,"NB_BRUSH_SHORTCUTS","","",null,null],[17,"NB_GRID_SHORTCUTS","","",null,null],[17,"NB_WORKSPACE_SHORTCUTS","","",null,null],[17,"NB_GENERAL_SHORTCUTS","","",null,null],[17,"SHORTCUTS_AREAS","","",null,null],[0,"events","liriodendron::userinterface::views::edit","",null,null],[5,"catch_events","liriodendron::userinterface::views::edit::events","",null,[[["log",3]]]],[0,"exit","liriodendron::userinterface::views","",null,null],[0,"render","liriodendron::userinterface::views::exit","",null,null],[5,"render","liriodendron::userinterface::views::exit::render","",null,[[["terminal",3]]]],[5,"render_borders","","",null,[[["frame",3],["rect",3]]]],[5,"render_text","","",null,[[["frame",3],["rect",3]]]],[17,"EXTRA_SPACES","","",null,null],[17,"LARGER_ROW","","",null,null],[17,"WIN_WIDTH","","",null,null],[17,"TEXT_HEIGHT","","",null,null],[17,"WIN_HEIGHT","","",null,null],[0,"events","liriodendron::userinterface::views::exit","",null,null],[5,"catch_events","liriodendron::userinterface::views::exit::events","",null,[[]]],[0,"generationerror","liriodendron::userinterface::views","",null,null],[0,"render","liriodendron::userinterface::views::generationerror","",null,null],[5,"render","liriodendron::userinterface::views::generationerror::render","",null,[[["terminal",3],["string",3]]]],[5,"render_borders","","",null,[[["frame",3],["rect",3]]]],[5,"render_text","","",null,[[["frame",3],["rect",3]]]],[17,"EXTRA_SPACES","","",null,null],[17,"LARGER_ROW","","",null,null],[17,"WIN_WIDTH","","",null,null],[17,"TEXT_HEIGHT","","",null,null],[17,"WIN_HEIGHT","","",null,null],[0,"events","liriodendron::userinterface::views::generationerror","",null,null],[5,"catch_events","liriodendron::userinterface::views::generationerror::events","",null,[[]]],[0,"gridname","liriodendron::userinterface::views","",null,null],[0,"render","liriodendron::userinterface::views::gridname","",null,null],[5,"render","liriodendron::userinterface::views::gridname::render","",null,[[["terminal",3],["log",3]]]],[17,"MAX_BOX_HEIGHT","","",null,null],[17,"TEXT_HEIGHT","","",null,null],[17,"EXTRA_SPACES","","",null,null],[17,"LARGER_ROW","","",null,null],[17,"WIN_WIDTH","","",null,null],[17,"WIN_HEIGHT","","",null,null],[0,"events","liriodendron::userinterface::views::gridname","",null,null],[5,"catch_events","liriodendron::userinterface::views::gridname::events","",null,[[["userevent",4],["log",3]]]],[0,"logoverflow","liriodendron::userinterface::views","",null,null],[0,"render","liriodendron::userinterface::views::logoverflow","",null,null],[5,"render","liriodendron::userinterface::views::logoverflow::render","",null,[[["terminal",3]]]],[5,"render_borders","","",null,[[["frame",3],["rect",3]]]],[5,"render_text","","",null,[[["frame",3],["rect",3]]]],[17,"EXTRA_SPACES","","",null,null],[17,"LARGER_ROW","","",null,null],[17,"WIN_WIDTH","","",null,null],[17,"TEXT_HEIGHT","","",null,null],[17,"WIN_HEIGHT","","",null,null],[0,"events","liriodendron::userinterface::views::logoverflow","",null,null],[5,"catch_events","liriodendron::userinterface::views::logoverflow::events","",null,[[]]],[0,"gridnumbererror","liriodendron::userinterface::views","",null,null],[0,"render","liriodendron::userinterface::views::gridnumbererror","",null,null],[5,"render","liriodendron::userinterface::views::gridnumbererror::render","",null,[[["terminal",3]]]],[5,"render_borders","","",null,[[["frame",3],["rect",3]]]],[5,"render_text","","",null,[[["frame",3],["rect",3]]]],[17,"EXTRA_SPACES","","",null,null],[17,"LARGER_ROW","","",null,null],[17,"WIN_WIDTH","","",null,null],[17,"TEXT_HEIGHT","","",null,null],[17,"WIN_HEIGHT","","",null,null],[0,"events","liriodendron::userinterface::views::gridnumbererror","",null,null],[5,"catch_events","liriodendron::userinterface::views::gridnumbererror::events","",null,[[]]],[0,"parameters","liriodendron::userinterface::views","",null,null],[0,"render","liriodendron::userinterface::views::parameters","",null,null],[5,"render","liriodendron::userinterface::views::parameters::render","",null,[[["terminal",3],["log",3]]]],[5,"render_grids","","",null,[[["frame",3],["log",3],["rect",3]]]],[5,"render_brush","","",null,[[["frame",3],["log",3],["rect",3]]]],[5,"render_color","","",null,[[["frame",3],["rect",3]]]],[5,"render_texture","","",null,[[["frame",3],["rect",3],["log",3]]]],[5,"render_pixel","","",null,[[["frame",3],["rect",3]]]],[5,"render_shortcuts","","",null,[[["frame",3],["rect",3],["vec",3]]]],[5,"render_tasks_gauge","","",null,[[["frame",3],["rect",3]]]],[17,"NB_GENERAL_SHORTCUTS","","",null,null],[17,"NB_GRIDS_SHORTCUTS","","",null,null],[17,"NB_BRUSH_SHORTCUTS","","",null,null],[17,"NB_TEXTURE_SHORTCUTS","","",null,null],[17,"NB_COLOR_SHORTCUTS","","",null,null],[17,"NB_PIXEL_SHORTCUTS","","",null,null],[17,"SHORTCUTS_AREAS","","",null,null],[17,"LARGER_COLOR_ROW","","",null,null],[17,"LARGER_PIXEL_ROW","","",null,null],[17,"LARGER_TEXTURE_ROW","","",null,null],[17,"LARGER_GRID_PARAM_ROW","","",null,null],[17,"LARGER_BRUSH_PARAM_ROW","","",null,null],[17,"BRUSH_SHORTCUTS_HEIGHT","","",null,null],[0,"events","liriodendron::userinterface::views::parameters","",null,null],[5,"catch_events","liriodendron::userinterface::views::parameters::events","",null,[[["log",3]]]],[0,"resizeerror","liriodendron::userinterface::views","",null,null],[0,"render","liriodendron::userinterface::views::resizeerror","",null,null],[5,"render","liriodendron::userinterface::views::resizeerror::render","",null,[[["terminal",3]]]],[5,"render_text","","",null,[[["frame",3],["rect",3]]]],[17,"TEXT_HEIGHT","","",null,null],[17,"MIN_WIDTH","","",null,null],[17,"MIN_HEIGHT","","",null,null],[0,"events","liriodendron::userinterface::views::resizeerror","",null,null],[5,"catch_events","liriodendron::userinterface::views::resizeerror::events","",null,[[],["usererror",4]]],[0,"setbrushcolor","liriodendron::userinterface::views","",null,null],[0,"render","liriodendron::userinterface::views::setbrushcolor","",null,null],[5,"render","liriodendron::userinterface::views::setbrushcolor::render","",null,[[["terminal",3],["log",3]]]],[17,"RGB_BOX_HEIGHT","","",null,null],[17,"TEXT_HEIGHT","","",null,null],[17,"EXTRA_SPACES","","",null,null],[17,"LARGER_ROW","","",null,null],[17,"WIN_WIDTH","","",null,null],[17,"WIN_HEIGHT","","",null,null],[0,"events","liriodendron::userinterface::views::setbrushcolor","",null,null],[5,"catch_events","liriodendron::userinterface::views::setbrushcolor::events","",null,[[["log",3]]]],[0,"setgenerationnumber","liriodendron::userinterface::views","",null,null],[0,"render","liriodendron::userinterface::views::setgenerationnumber","",null,null],[5,"render","liriodendron::userinterface::views::setgenerationnumber::render","",null,[[["terminal",3],["log",3]]]],[17,"NUMBER_BOX_HEIGHT","","",null,null],[17,"TEXT_HEIGHT","","",null,null],[17,"EXTRA_SPACES","","",null,null],[17,"LARGER_ROW","","",null,null],[17,"WIN_WIDTH","","",null,null],[17,"WIN_HEIGHT","","",null,null],[0,"events","liriodendron::userinterface::views::setgenerationnumber","",null,null],[5,"catch_events","liriodendron::userinterface::views::setgenerationnumber::events","",null,[[["log",3]]]],[0,"settextureformat","liriodendron::userinterface::views","",null,null],[0,"render","liriodendron::userinterface::views::settextureformat","",null,null],[5,"render","liriodendron::userinterface::views::settextureformat::render","",null,[[["terminal",3],["log",3]]]],[17,"BOX_HEIGHT","","",null,null],[17,"TEXT_HEIGHT","","",null,null],[17,"EXTRA_SPACES","","",null,null],[17,"LARGER_ROW","","",null,null],[17,"WIN_WIDTH","","",null,null],[17,"WIN_HEIGHT","","",null,null],[0,"events","liriodendron::userinterface::views::settextureformat","",null,null],[5,"catch_events","liriodendron::userinterface::views::settextureformat::events","",null,[[["log",3]]]],[0,"shutdown","liriodendron::userinterface::views","",null,null],[0,"render","liriodendron::userinterface::views::shutdown","",null,null],[5,"render","liriodendron::userinterface::views::shutdown::render","",null,[[["terminal",3],["hashmap",3]]]],[5,"render_borders","","",null,[[["frame",3],["rect",3]]]],[5,"render_text","","",null,[[["frame",3],["rect",3]]]],[5,"render_gauges","","",null,[[["frame",3],["hashmap",3],["rect",3]]]],[17,"EXTRA_SPACES","","",null,null],[17,"LARGER_ROW","","",null,null],[17,"WIN_WIDTH","","",null,null],[17,"TEXT_HEIGHT","","",null,null],[17,"GAUGE_NUMBERS","","",null,null],[17,"MAX_WIN_HEIGHT","","",null,null],[0,"events","liriodendron::userinterface::views::shutdown","",null,null],[5,"catch_events","liriodendron::userinterface::views::shutdown::events","",null,[[],["usererror",4]]],[0,"switchgridserror","liriodendron::userinterface::views","",null,null],[0,"render","liriodendron::userinterface::views::switchgridserror","",null,null],[5,"render","liriodendron::userinterface::views::switchgridserror::render","",null,[[["terminal",3]]]],[5,"render_borders","","",null,[[["frame",3],["rect",3]]]],[5,"render_text","","",null,[[["frame",3],["rect",3]]]],[17,"EXTRA_SPACES","","",null,null],[17,"LARGER_ROW","","",null,null],[17,"WIN_WIDTH","","",null,null],[17,"TEXT_HEIGHT","","",null,null],[17,"WIN_HEIGHT","","",null,null],[0,"events","liriodendron::userinterface::views::switchgridserror","",null,null],[5,"catch_events","liriodendron::userinterface::views::switchgridserror::events","",null,[[]]],[0,"switchgridsorder","liriodendron::userinterface::views","",null,null],[0,"render","liriodendron::userinterface::views::switchgridsorder","",null,null],[5,"render","liriodendron::userinterface::views::switchgridsorder::render","",null,[[["terminal",3],["log",3]]]],[17,"BOX_HEIGHT","","",null,null],[17,"TEXT_HEIGHT","","",null,null],[17,"EXTRA_SPACES","","",null,null],[17,"LARGER_ROW","","",null,null],[17,"WIN_WIDTH","","",null,null],[17,"WIN_HEIGHT","","",null,null],[0,"events","liriodendron::userinterface::views::switchgridsorder","",null,null],[5,"catch_events","liriodendron::userinterface::views::switchgridsorder::events","",null,[[["log",3]]]],[0,"unavailablethread","liriodendron::userinterface::views","",null,null],[0,"render","liriodendron::userinterface::views::unavailablethread","",null,null],[5,"render","liriodendron::userinterface::views::unavailablethread::render","",null,[[["terminal",3]]]],[5,"render_borders","","",null,[[["frame",3],["rect",3]]]],[5,"render_text","","",null,[[["frame",3],["rect",3]]]],[17,"EXTRA_SPACES","","",null,null],[17,"LARGER_ROW","","",null,null],[17,"WIN_WIDTH","","",null,null],[17,"TEXT_HEIGHT","","",null,null],[17,"WIN_HEIGHT","","",null,null],[0,"events","liriodendron::userinterface::views::unavailablethread","",null,null],[5,"catch_events","liriodendron::userinterface::views::unavailablethread::events","",null,[[]]],[17,"MIN_BRUSH_AREA_WIDTH","liriodendron::userinterface::views","",null,null],[17,"MIN_SHORTCUTS_AREA_WIDTH","","",null,null],[17,"MIN_GRID_SIZE","","",null,null],[17,"MIN_GRID_AREA_WIDTH","","",null,null],[17,"MIN_WIDTH_EDIT","","",null,null],[17,"MIN_BRUSH_AREA_HEIGHT","","",null,null],[17,"MIN_GRID_AREA_HEIGHT","","",null,null],[17,"MIN_SHORTCUTS_AREA_HEIGHT","","",null,null],[17,"MIN_HEIGHT_PARAM","","",null,null],[17,"MIN_WIDTH_TEXTURE","","",null,null],[17,"MIN_WIDTH_BRUSH_PARAM","","",null,null],[17,"MIN_WIDTH_GRID_PARAM","","",null,null],[17,"MIN_WIDTH_COLOR","","",null,null],[17,"MIN_WIDTH_PIXEL","","",null,null],[17,"MIN_WIDTH_EXIT","","",null,null],[17,"MIN_HEIGHT_EXIT","","",null,null],[17,"MIN_WIDTH_SETBRUSHCOLOR","","",null,null],[17,"MIN_HEIGHT_SETBRUSHCOLOR","","",null,null],[17,"MIN_WIDTH_SETGENERATIONNUMBER","","",null,null],[17,"MIN_HEIGHT_SETGENERATIONNUMBER","","",null,null],[17,"MIN_WIDTH_SETTEXTUREFORMAT","","",null,null],[17,"MIN_HEIGHT_SETTEXTUREFORMAT","","",null,null],[17,"MIN_WIDTH_GENERATIONERROR","","",null,null],[17,"MIN_HEIGHT_GENERATIONERROR","","",null,null],[17,"MIN_WIDTH_GRIDNAME","","",null,null],[17,"MIN_HEIGHT_GRIDNAME","","",null,null],[17,"MIN_WIDTH_GRIDNUMBERERROR","","",null,null],[17,"MIN_HEIGHT_GRIDNUMBERERROR","","",null,null],[17,"MIN_WIDTH_LOGOVERFLOW","","",null,null],[17,"MIN_HEIGHT_LOGOVERFLOW","","",null,null],[17,"MIN_WIDTH_SHUTDOWN","","",null,null],[17,"MIN_HEIGHT_SHUTDOWN","","",null,null],[17,"MIN_WIDTH_SWITCHGRIDSORDER","","",null,null],[17,"MIN_HEIGHT_SWITCHGRIDSORDER","","",null,null],[17,"MIN_WIDTH_SWITCHGRIDSERROR","","",null,null],[17,"MIN_HEIGHT_SWITCHGRIDSERROR","","",null,null],[17,"MIN_WIDTH_UNAVAILABLETHREAD","","",null,null],[17,"MIN_HEIGHT_UNAVAILABLETHREAD","","",null,null],[17,"MIN_WIDTH","","",null,null],[17,"MIN_HEIGHT","","",null,null],[0,"widgets","liriodendron::userinterface","Module for tui-rs Widget sub-structs",null,null],[0,"brushselector","liriodendron::userinterface::widgets","",null,null],[3,"BrushSelectorWidget","liriodendron::userinterface::widgets::brushselector","Widget to render a brush selector section. The boxed area…",null,null],[12,"log","","",23,null],[17,"RGB_LABEL_HEIGHT","","",null,null],[17,"LABEL_WIDTH","","",null,null],[17,"TITLE_HEIGHT","","",null,null],[17,"NB_BRUSHES","","",null,null],[17,"SELECTOR_HEIGHT","","",null,null],[17,"SELECTOR_WIDTH","","",null,null],[17,"RGB_BOX_WIDTH","","",null,null],[17,"RGB_BOX_HEIGHT","","",null,null],[11,"new","","",23,[[["log",3]],["brushselectorwidget",3]]],[11,"render_brush","","",23,[[["buffer",3]]]],[11,"render_color","","",23,[[["buffer",3]]]],[11,"render_selector","","",23,[[["buffer",3]]]],[0,"cursor","liriodendron::userinterface::widgets","",null,null],[3,"CursorWidget","liriodendron::userinterface::widgets::cursor","Widget to render a blinking cursor",null,null],[12,"pos","","",24,null],[12,"is_blinking","","",24,null],[11,"new","","",24,[[],["cursorwidget",3]]],[0,"gauge","liriodendron::userinterface::widgets","",null,null],[3,"Rgb","liriodendron::userinterface::widgets::gauge","Color C/C++ style enum",null,null],[3,"GaugeWidget","","Widget to render a loading gauge with a progressive color",null,null],[12,"filled_ratio","","",25,null],[12,"label","","",25,null],[12,"init_color","","",25,null],[12,"ongoing_color","","",25,null],[12,"color_ratio","","",25,null],[17,"GAUGE_HEIGHT","","",null,null],[18,"RED","","",26,null],[18,"GREEN","","",26,null],[18,"YELLOW","","",26,null],[11,"new","","",25,[[["string",3]],["gaugewidget",3]]],[0,"grid","liriodendron::userinterface::widgets","",null,null],[3,"GridWidget","liriodendron::userinterface::widgets::grid","Widget to render a colorizable grid",null,null],[12,"log","","",27,null],[17,"TAB_WIDTH","","",null,null],[17,"LIGHT_GREY","","",null,null],[11,"new","","",27,[[["log",3]],["gridwidget",3]]],[11,"render_inner","","",27,[[["buffer",3]]]],[11,"render_scrollers","","",27,[[["buffer",3]]]],[11,"render_tabs","","",27,[[["buffer",3]]]],[0,"querierpopup","liriodendron::userinterface::widgets","",null,null],[3,"QuerierPopupWidget","liriodendron::userinterface::widgets::querierpopup","Widget to render a popup querying user\'s input",null,null],[12,"keyboard_instructions","","",28,null],[12,"value","","",28,null],[12,"cursor","","",28,null],[11,"new","","",28,[[["text",3],["spans",3],["vec",3]],["querierpopupwidget",3]]],[0,"scroller","liriodendron::userinterface::widgets","",null,null],[3,"ScrollerWidget","liriodendron::userinterface::widgets::scroller","Widget to render a vertical of horizotal scroller",null,null],[12,"direction","","",29,null],[12,"scroll","","",29,null],[12,"section_size","","",29,null],[17,"SCROLLER","","",null,null],[17,"ARROWS","","",null,null],[17,"GREY","","",null,null],[11,"new","","",29,[[["direction",4]],["scrollerwidget",3]]],[11,"compute_size","","",29,[[]]],[11,"render_vertical_scroller","","",29,[[["rect",3],["buffer",3]]]],[11,"render_horizontal_scroller","","",29,[[["rect",3],["buffer",3]]]],[0,"selectorpopup","liriodendron::userinterface::widgets","",null,null],[3,"SelectorPopupWidget","liriodendron::userinterface::widgets::selectorpopup","Widget to render a popup querying user\'s input",null,null],[12,"keyboard_instructions","","",30,null],[12,"value","","",30,null],[12,"cursor","","",30,null],[11,"new","","",30,[[["string",3],["text",3],["vec",3]],["selectorpopupwidget",3]]],[0,"shortcuts","liriodendron::userinterface::widgets","",null,null],[3,"ShortcutsWidget","liriodendron::userinterface::widgets::shortcuts","Widget to render shortcuts\' instructions area",null,null],[12,"actions","","",31,null],[12,"keyboard_instructions","","",31,null],[12,"title","","",31,null],[17,"VERTICAL_BAR","","",null,null],[17,"ACTIONS_AREA_WIDTH","","",null,null],[17,"KEYBOARD_AREA_WIDTH","","",null,null],[11,"new","","",31,[[["string",3]],["shortcutswidget",3]]],[11,"push_action","","",31,[[]]],[11,"push_instruction","","",31,[[]]],[17,"BORDERS","liriodendron::userinterface::widgets","",null,null],[17,"EMPTY_SPACES","","",null,null],[17,"RGB_SUM_DIVIDED_BY_2","","",null,null],[11,"new","liriodendron::userinterface","",19,[[],["userinterface",3]]],[11,"cmp","","",19,[[],["usererror",4]]],[11,"check_terminal_size","","",19,[[["userevent",4],["view",4]],["usererror",4]]],[11,"get_event","","",19,[[],["userevent",4]]],[11,"get_view","","",19,[[],["view",4]]],[11,"get_error","","",19,[[],["usererror",4]]],[11,"set_event","","",19,[[["userevent",4]]]],[11,"set_error","","",19,[[["usererror",4]]]],[11,"set_view","","",19,[[["view",4]]]],[11,"set_popupview","","",19,[[]]],[11,"set","","",19,[[]]],[0,"utils","liriodendron","Shared structs and enums between modules",null,null],[4,"FullPixel","liriodendron::utils","Possible content for a filled cell",null,null],[13,"Body","","",32,null],[13,"Border","","",32,null],[13,"BodyBorder","","",32,null],[13,"BodyEmpty","","",32,null],[13,"SpecificColor","","",32,null],[0,"task","liriodendron","Run user queries and manage them in threads if queries are…",null,null],[0,"generation","liriodendron::task","Module for generation tasks",null,null],[3,"Generation","liriodendron::task::generation","Task which builds a directory and generate textures inside",null,null],[12,"grids","","",33,null],[12,"grids_rows","","",33,null],[12,"grids_cols","","",33,null],[12,"nb_grids","","",33,null],[12,"pixel_ratio","","",33,null],[12,"border_ratio","","",33,null],[12,"palette_generation","","",33,null],[12,"number_generations","","",33,null],[12,"format","","",33,null],[12,"directory_name","","",33,null],[12,"body_de_ratio","","",33,null],[12,"body_dr_ratio","","",33,null],[0,"palette","","Module for colors generation",null,null],[3,"Palette","liriodendron::task::generation::palette","A set of colors",null,null],[12,"body_color","","",34,null],[12,"border_color","","",34,null],[4,"PaletteGeneration","","Generate a set of colors",null,null],[13,"RandomPredefinedColors","","",35,null],[17,"PREDEFINED_COLORS","","An RGBA array",null,null],[11,"new","","",34,[[["rgba",3]],["palette",3]]],[11,"get_body_color","","",34,[[],["rgba",3]]],[11,"get_border_color","","",34,[[],["rgba",3]]],[11,"run","","",35,[[],["palette",3]]],[17,"TRANSPARENT_PIXEL","liriodendron::task::generation","",null,null],[11,"new","","Return an error if the created directory name is already…",33,[[["log",3]],[["result",6],["generation",3]]]],[11,"get_img_width","","",33,[[]]],[11,"get_img_height","","",33,[[]]],[11,"fix_pixel","","",33,[[["rgbaimage",6],["vec",3],["vec",3]]]],[11,"fix_empty_pixel","","",33,[[["rgbaimage",6],["vec",3],["vec",3]]]],[11,"is_body_pixel","","",33,[[["vec",3],["fullpixel",4]]]],[11,"check_higher_priority_id","","",33,[[["option",4]]]],[11,"fix_full_pixel","","",33,[[["rgbaimage",6],["palette",3],["fullpixel",4]]]],[11,"colorize_image","","",33,[[["rgbaimage",6],["rgba",3]]]],[0,"tasksmanager","liriodendron::task","Module for threads and user\'s tasks management",null,null],[3,"TasksManager","liriodendron::task::tasksmanager","Multi-threaded struct to support expensive users queries…",null,null],[12,"nb_running_threads","","Running threads counter",36,null],[12,"waiting_tasks","","Queue\'s length",36,null],[12,"is_sending","","When true, threads send their progression",36,null],[12,"threadpool","","",36,null],[12,"sender","","",36,null],[12,"receiver","","",36,null],[12,"tasks","","Waiting tasks are stocked in this queue",36,null],[12,"todo_tasks","","",36,null],[12,"done_tasks","","",36,null],[12,"threads_monitor","","Stocks threads\' progression",36,null],[12,"threads_number","","Customizable member",36,null],[12,"max_tasks","","Customizable member",36,null],[17,"TASKS_QUEUE_FULL","","",null,null],[11,"new","","",36,[[],["tasksmanager",3]]],[11,"new_generation_task","","",36,[[["log",3]]]],[11,"get_nb_running_threads","","",36,[[]]],[11,"get_todo_and_max_tasks","","",36,[[]]],[11,"get_done_and_todo_tasks","","",36,[[]]],[11,"check_queue","","Checks if a task is in the queue. If a thread is…",36,[[]]],[11,"start_sender_channel","","",36,[[]]],[11,"compute_todotasks","","",36,[[]]],[11,"spawn_unlocking_thread","","Unlocks a blocking std::sync::mpsc::Receiver.recv() call",36,[[]]],[11,"shutdown","","",36,[[]]],[11,"get_threads_monitor","","",36,[[],["hashmap",3]]],[11,"is_running","","While the receiver is receiving data from the threadpool,…",36,[[]]],[8,"Task","liriodendron::task","",null,null],[10,"run","","",37,[[]]],[10,"get_nb_subtasks","","",37,[[]]],[11,"from","liriodendron::args","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","liriodendron::log","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","liriodendron::log::action","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","liriodendron::log::tools","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","liriodendron::log::tools::brush","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","liriodendron::log::tools::brush::brushcolor","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","liriodendron::log::tools::grids","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","liriodendron::log::tools::grids::cell","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","liriodendron::log::tools::grids::gridname","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","liriodendron::log::tools::texturessettings","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","liriodendron::log::tools::texturessettings::generationnumber","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","liriodendron::log::tools::setter","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","liriodendron::userinterface","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","liriodendron::userinterface::errors","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","liriodendron::userinterface::events","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","liriodendron::userinterface::views","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","liriodendron::userinterface::widgets::brushselector","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","liriodendron::userinterface::widgets::cursor","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","liriodendron::userinterface::widgets::gauge","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","liriodendron::userinterface::widgets::grid","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","liriodendron::userinterface::widgets::querierpopup","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","liriodendron::userinterface::widgets::scroller","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","liriodendron::userinterface::widgets::selectorpopup","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","liriodendron::userinterface::widgets::shortcuts","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","liriodendron::utils","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"from","liriodendron::task::generation","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","liriodendron::task::generation::palette","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from","liriodendron::task::tasksmanager","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"set_value","liriodendron::log::tools::brush::brushcolor","Checks value and set it",10,[[]]],[11,"set_value","liriodendron::log::tools::grids::gridname","Checks value and set it",13,[[]]],[11,"set_value","liriodendron::log::tools::texturessettings::generationnumber","Checks value and set it",15,[[]]],[11,"run","liriodendron::task::generation","Generates one texture called current_generation.png",33,[[]]],[11,"get_nb_subtasks","","",33,[[]]],[11,"clone","liriodendron::log::action","",2,[[],["action",3]]],[11,"clone","liriodendron::log::tools::grids::cell","",12,[[],["cell",3]]],[11,"clone","liriodendron::log::tools::grids","",11,[[],["grids",3]]],[11,"clone","liriodendron::log::tools","",3,[[],["pixel",4]]],[11,"clone","","",4,[[],["grid",4]]],[11,"clone","","",5,[[],["workspacetool",4]]],[11,"clone","","",6,[[],["gridtool",4]]],[11,"clone","","",7,[[],["celltool",4]]],[11,"clone","","",8,[[],["tool",4]]],[11,"clone","liriodendron::userinterface::errors","",20,[[],["usererror",4]]],[11,"clone","liriodendron::userinterface::events","",21,[[],["userevent",4]]],[11,"clone","liriodendron::userinterface::views","",22,[[],["view",4]]],[11,"clone","liriodendron::utils","",32,[[],["fullpixel",4]]],[11,"clone","liriodendron::task::generation::palette","",34,[[],["palette",3]]],[11,"clone","","",35,[[],["palettegeneration",4]]],[11,"eq","liriodendron::log::action","",2,[[]]],[11,"eq","liriodendron::log::tools::grids::cell","",12,[[["cell",3]]]],[11,"ne","","",12,[[["cell",3]]]],[11,"eq","liriodendron::log::tools","",4,[[["grid",4]]]],[11,"eq","","",5,[[["workspacetool",4]]]],[11,"ne","","",5,[[["workspacetool",4]]]],[11,"eq","","",6,[[["gridtool",4]]]],[11,"eq","","",7,[[["celltool",4]]]],[11,"ne","","",7,[[["celltool",4]]]],[11,"eq","","",8,[[["tool",4]]]],[11,"ne","","",8,[[["tool",4]]]],[11,"eq","liriodendron::utils","",32,[[["fullpixel",4]]]],[11,"ne","","",32,[[["fullpixel",4]]]],[11,"deref","liriodendron::log::tools::brush::brushcolor","",10,[[]]],[11,"deref","liriodendron::log::tools::grids::gridname","",13,[[]]],[11,"deref","liriodendron::log::tools::texturessettings::generationnumber","",15,[[]]],[11,"deref_mut","liriodendron::log::tools::brush::brushcolor","",10,[[]]],[11,"deref_mut","liriodendron::log::tools::grids::gridname","",13,[[]]],[11,"deref_mut","liriodendron::log::tools::texturessettings::generationnumber","",15,[[]]],[11,"fmt","liriodendron::log::tools::grids::cell","",12,[[["formatter",3]],["result",6]]],[11,"fmt","liriodendron::log::tools","",4,[[["formatter",3]],["result",6]]],[11,"hash","liriodendron::log::tools::grids::cell","",12,[[]]],[11,"hash","liriodendron::log::tools","",4,[[]]],[11,"clap","liriodendron::args","",0,[[],["app",3]]],[11,"from_clap","","",0,[[["argmatches",3]]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"is_subcommand","","",0,[[]]],[11,"render","liriodendron::userinterface::widgets::brushselector","",23,[[["rect",3],["buffer",3]]]],[11,"render","liriodendron::userinterface::widgets::cursor","",24,[[["rect",3],["buffer",3]]]],[11,"render","liriodendron::userinterface::widgets::gauge","",25,[[["rect",3],["buffer",3]]]],[11,"render","liriodendron::userinterface::widgets::grid","",27,[[["rect",3],["buffer",3]]]],[11,"render","liriodendron::userinterface::widgets::querierpopup","",28,[[["rect",3],["buffer",3]]]],[11,"render","liriodendron::userinterface::widgets::scroller","",29,[[["rect",3],["buffer",3]]]],[11,"render","liriodendron::userinterface::widgets::selectorpopup","",30,[[["rect",3],["buffer",3]]]],[11,"render","liriodendron::userinterface::widgets::shortcuts","",31,[[["rect",3],["buffer",3]]]]],"p":[[3,"Args"],[3,"Log"],[3,"Action"],[4,"Pixel"],[4,"Grid"],[4,"WorkspaceTool"],[4,"GridTool"],[4,"CellTool"],[4,"Tool"],[3,"Brush"],[3,"BrushColor"],[3,"Grids"],[3,"Cell"],[3,"GridName"],[3,"TexturesSettings"],[3,"GenerationNumber"],[3,"Cursor"],[3,"StringCursor"],[8,"Setter"],[3,"UserInterface"],[4,"UserError"],[4,"UserEvent"],[4,"View"],[3,"BrushSelectorWidget"],[3,"CursorWidget"],[3,"GaugeWidget"],[3,"Rgb"],[3,"GridWidget"],[3,"QuerierPopupWidget"],[3,"ScrollerWidget"],[3,"SelectorPopupWidget"],[3,"ShortcutsWidget"],[4,"FullPixel"],[3,"Generation"],[3,"Palette"],[4,"PaletteGeneration"],[3,"TasksManager"],[8,"Task"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);